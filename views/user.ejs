<%- include('layout.ejs') %>
  <!-- B·ªô l·ªçc t√¨m ki·∫øm -->
  <div class="w-full flex justify-end px-4 py-2">
    <form action="/logout" method="POST">
      <button type="submit"
        class="bg-red-500 hover:bg-red-600 text-white text-xs sm:text-sm px-3 py-1 sm:px-4 sm:py-2 rounded-lg font-medium transition">
        üîì ƒêƒÉng xu·∫•t
      </button>
    </form>
  </div>
  <div class="max-w-4xl mx-auto bg-white rounded-xl p-4 space-y-4 mt-8 border">

    <!-- H√†ng: Th√°ng / NƒÉm / ƒê·ª£t -->
    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
      <div>
        <label class="block mb-1 font-semibold text-gray-700">Th√°ng</label>
        <select id="month" onchange="updateBatchesAndSalary()"
          class="w-full border border-gray-300 p-2 rounded focus:ring focus:ring-blue-200">
          <% for(let m=1; m <=12; m++) { %>
            <option value="<%= m %>">
              <%= m %>
            </option>
            <% } %>
        </select>
      </div>
      <div>
        <label class="block mb-1 font-semibold text-gray-700">NƒÉm</label>
        <select id="year" onchange="updateBatchesAndSalary()"
          class="w-full border border-gray-300 p-2 rounded focus:ring focus:ring-blue-200">
          <% const thisYear=new Date().getFullYear(); %>
            <% for(let y=thisYear; y>= thisYear - 5; y--) { %>
              <option value="<%= y %>">
                <%= y %>
              </option>
              <% } %>
        </select>
      </div>
      <div>
        <label class="block mb-1 font-semibold text-gray-700">ƒê·ª£t</label>
        <select id="batch" onchange="updateSalary()"
          class="w-full border border-gray-300 p-2 rounded focus:ring focus:ring-blue-200">
          <option value="">--</option>
        </select>
      </div>
    </div>

    <!-- √î nh·∫≠p t√™n nh√¢n vi√™n -->
    <div>
      <label class="block mb-1 font-semibold text-gray-700">T√™n nh√¢n vi√™n</label>
      <input type="text" id="name" oninput="updateSalary()"
        class="w-full border border-gray-300 p-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-300"
        placeholder="Nh·∫≠p t√™n nh√¢n vi√™n...">
    </div>
  </div>

  <!-- K·∫øt qu·∫£ b·∫£ng l∆∞∆°ng -->
  <div id="salary-result" class="max-w-4xl mx-auto p-4 space-y-6 mt-6"></div>

  <script>
    async function updateBatchesAndSalary() {
      const month = document.getElementById('month').value;
      const year = document.getElementById('year').value;
      const batchSelect = document.getElementById('batch');

      if (!month || !year) return;

      const res = await fetch(`/api/pay-periods?month=${month}&year=${year}`);
      const data = await res.json();

      batchSelect.innerHTML = '<option value="">--</option>';
      data.forEach(b => {
        const opt = document.createElement('option');
        opt.value = b;
        opt.textContent = `ƒê·ª£t ${b}`;
        batchSelect.appendChild(opt);
      });

      updateSalary();
    }

    async function updateSalary() {
      const month = document.getElementById('month').value;
      const year = document.getElementById('year').value;
      const batch = document.getElementById('batch').value;
      const name = document.getElementById('name').value.toLowerCase();

      if (!month || !year || !batch || !name) {
        document.getElementById('salary-result').innerHTML = '';
        return;
      }

      const res = await fetch(`/api/salary?month=${month}&year=${year}&batch=${batch}&name=${encodeURIComponent(name)}`);
      const data = await res.json();

      const el = document.getElementById('salary-result');

      if (!data || !data.salary || !data.salary.salaryDetails) {
        el.innerHTML = `<div class="text-red-500">Kh√¥ng t√¨m th·∫•y b·∫£ng l∆∞∆°ng</div>`;
        return;
      }

      const s = data.salary.salaryDetails;

      // T√¨m m√£ ƒë·∫°i l√Ω (t√™n c·ªôt c√≥ th·ªÉ kh√°c, b·∫°n ki·ªÉm tra k·ªπ trong Excel)
      const maDaiLy = s['M√£ ƒë·∫°i l√Ω'] || s['ma dai ly'] || s['M√£ ƒêL'] || '';

      // Ch·ªâ l·∫•y c√°c c·ªôt s·ªë c√≥ gi√° tr·ªã kh√°c 0 (kh√¥ng bao g·ªìm m√£ ƒë·∫°i l√Ω)
      const items = Object.entries(s)
        .filter(([key, val]) => typeof val === 'number' && val !== 0);

      let html = `
    <div class="space-y-4">
      <h3 class="text-lg font-bold mb-2">üìã Chi ti·∫øt c√°c kho·∫£n</h3>
  `;

      // Hi·ªÉn th·ªã m√£ ƒë·∫°i l√Ω n·∫øu c√≥
      if (maDaiLy) {
        html += `
      <div class="flex justify-between bg-yellow-50 border border-yellow-300 rounded-lg px-4 py-2 text-sm">
        <span class="font-medium text-yellow-800">M√£ ƒë·∫°i l√Ω</span>
        <span class="font-bold text-yellow-700">${maDaiLy}</span>
      </div>
    `;
      }

      // Hi·ªÉn th·ªã c√°c kho·∫£n
      items.forEach(([key, val]) => {
        html += `
      <div class="flex justify-between bg-white border rounded-lg shadow px-4 py-2 text-sm">
        <span class="font-medium">${key}</span>
        <span class="font-semibold">${val.toLocaleString()}‚Ç´</span>
      </div>
    `;
      });

      html += `</div>`;
      el.innerHTML = html;
    }


    window.addEventListener('DOMContentLoaded', updateBatchesAndSalary);
  </script>
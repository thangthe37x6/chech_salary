<%- include('layout.ejs') %>

  <!-- Đăng xuất -->
  <div class="w-full flex justify-end items-center px-4 py-2">
    <!-- Nút Accounts -->
    <a href="/m-account"
      class="bg-green-500 hover:bg-green-600 text-white text-xs sm:text-sm px-3 py-1 sm:px-4 sm:py-2 rounded-lg font-medium transition-all flex items-center gap-1">
      👤 Accounts
    </a>

    <!-- Nút Đăng xuất -->
    <form action="/logout" method="POST" class="ml-2">
      <button type="submit"
        class="bg-red-500 hover:bg-red-600 text-white text-xs sm:text-sm px-3 py-1 sm:px-4 sm:py-2 rounded-lg font-medium transition-all">
        🔓 Đăng xuất
      </button>
    </form>
  </div>

  <!-- Khung chính -->
  <div class="bg-gray-100 min-h-screen py-8 px-4">
    <div class="max-w-6xl mx-auto bg-white p-6 sm:p-8 rounded-2xl shadow-xl space-y-10">

      <!-- Tiêu đề và thông báo -->
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <h2 class="text-2xl sm:text-3xl font-bold text-gray-800">📊 Admin Dashboard</h2>
      </div>

      <% if (message) { %>
        <div class="text-center text-red-600 font-semibold">
          <%= message %>
        </div>
        <% } %>

          <!-- Nhập file Excel -->
          <form action="/import" method="POST" enctype="multipart/form-data" class="space-y-4">
            <label for="year" class="block text-sm font-medium text-gray-700">📅 Năm</label>
            <input type="number" id="year" name="year" min="2000" max="2100" required
              class="block w-full border border-gray-300 rounded-lg px-4 py-2" />

            <label for="month" class="block text-sm font-medium text-gray-700">📆 Tháng</label>
            <select id="month" name="month" required class="block w-full border border-gray-300 rounded-lg px-4 py-2">
              <% for(let m=1; m <=12; m++) { %>
                <option value="<%= m %>">Tháng <%= m %>
                </option>
                <% } %>
            </select>

            <label for="excelFile" class="block text-sm font-medium text-gray-700">📥 Chọn file dữ liệu (.xlsx)</label>
            <input type="file" id="excelFile" name="excelFile" accept=".xlsx" required
              class="block w-full border border-gray-300 rounded-lg px-4 py-2" />

            <button type="submit"
              class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium transition-all">
              Xác nhận
            </button>
          </form>
    </div>

    <!-- Bộ lọc và kết quả -->
    <div class="max-w-6xl mx-auto mt-10 space-y-6">
      <!-- Bộ lọc -->
      <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 bg-white p-4 rounded-xl shadow">
        <div>
          <label class="font-semibold">Tháng</label>
          <select id="month" onchange="updateBatchesAndSalary()" class="w-full border p-2 rounded">
            <% for(let m=1; m <=12; m++) { %>
              <option value="<%= m %>">
                <%= m %>
              </option>
              <% } %>
          </select>
        </div>
        <div>
          <label class="font-semibold">Năm</label>
          <select id="year" onchange="updateBatchesAndSalary()" class="w-full border p-2 rounded">
            <% const thisYear=new Date().getFullYear(); %>
              <% for(let y=thisYear; y>= thisYear - 5; y--) { %>
                <option value="<%= y %>">
                  <%= y %>
                </option>
                <% } %>
          </select>
        </div>
        <div>
          <label class="font-semibold">Đợt</label>
          <select id="batch" onchange="updateSalary()" class="w-full border p-2 rounded">
            <option value="">--</option>
          </select>
        </div>
      </div>

      <!-- Kết quả bảng lương -->
      <div id="salary-result" class="bg-white p-4 rounded-xl shadow overflow-x-auto"></div>
    </div>
  </div>

  <script>
    async function updateBatchesAndSalary() {
      const month = document.getElementById('month').value;
      const year = document.getElementById('year').value;
      const batchSelect = document.getElementById('batch');

      if (!month || !year) return;

      const res = await fetch(`/admin/pay-periods?month=${month}&year=${year}`);
      const data = await res.json();

      batchSelect.innerHTML = '<option value="">--</option>';
      data.forEach(b => {
        const opt = document.createElement('option');
        opt.value = b;
        opt.textContent = `Đợt ${b}`;
        batchSelect.appendChild(opt);
      });

      updateSalary();
    }

    async function updateSalary() {
      const month = document.getElementById('month').value;
      const year = document.getElementById('year').value;
      const batch = document.getElementById('batch').value;

      if (!month || !year || !batch) {
        document.getElementById('salary-result').innerHTML = '';
        return;
      }

      const res = await fetch(`/admin/salary?month=${month}&year=${year}&batch=${batch}`);
      const data = await res.json();
      const salaries = data.salary || [];

      if (salaries.length === 0) {
        document.getElementById('salary-result').innerHTML = `<div class="text-red-500">Không có dữ liệu bảng lương</div>`;
        return;
      }

      // 🔍 Lấy tất cả key của salaryDetails (bao gồm Tên, Hoa hồng, v.v.)
      const allKeys = new Set();
      salaries.forEach(d => {
        const keys = Object.keys(d.salaryDetails || {});
        keys.forEach(k => allKeys.add(k));
      });

      const sortedKeys = [...[...allKeys].filter(k => k !== 'Tên')];

      let html = `
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg sm:text-xl font-bold text-gray-800">Bảng lương tháng ${month}, đợt ${batch}, năm ${year}</h3>
      <form action="/admin/delete-salary" method="POST" onsubmit="return confirm('Bạn chắc chắn muốn xóa bảng lương đợt này?')">
        <input type="hidden" name="month" value="${month}">
        <input type="hidden" name="year" value="${year}">
        <input type="hidden" name="batch" value="${batch}">
        <button type="submit" class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg text-sm font-medium">
          🗑️ Xóa đợt
        </button>
      </form>
    </div>
    <div class="overflow-x-auto">
    <table class="w-full table-auto border-collapse bg-white text-sm min-w-[1000px]">
      <thead>
        <tr class="bg-gray-100 text-gray-700 uppercase tracking-wide text-xs">
  `;

      sortedKeys.forEach(key => {
        html += `<th class="px-4 py-3 text-left">${key}</th>`;
      });

      html += `</tr></thead><tbody class="text-gray-700">`;

      salaries.forEach(d => {
        const s = d.salaryDetails || {};
        html += `<tr class="border-t hover:bg-gray-50 transition">`;
        sortedKeys.forEach(key => {
          const val = s[key];
          const displayVal = typeof val === 'number' ? val.toLocaleString() : (val || '');
          const style = (key.toLowerCase().includes('thực chi') || key.toLowerCase().includes('actualcost')) ? 'font-semibold text-green-700' : '';
          html += `<td class="px-4 py-3 ${style}">${displayVal}</td>`;
        });
        html += `</tr>`;
      });

      html += `</tbody></table></div>`;
      document.getElementById('salary-result').innerHTML = html;
    }

    window.addEventListener('DOMContentLoaded', updateBatchesAndSalary);
  </script>